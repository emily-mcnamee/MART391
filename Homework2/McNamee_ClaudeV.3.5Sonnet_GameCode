let player;
let collectibles = [];
let enemies = [];
let score = 0;
let gameOver = false;
let gameWon = false;

function setup() {
  createCanvas(800, 600);
  
  // Create player
  player = {
    x: width/2,
    y: height/2,
    size: 20,
    speed: 5
  };
  
  // Create 3 collectible objects
  for (let i = 0; i < 3; i++) {
    collectibles.push({
      x: random(width),
      y: random(height),
      size: 15,
      collected: false
    });
  }
  
  // Create 5 enemy objects
  for (let i = 0; i < 5; i++) {
    enemies.push({
      x: random(width),
      y: random(height),
      size: 25,
      speedX: random(-3, 3),
      speedY: random(-3, 3)
    });
  }
}

function draw() {
  background(220);
  
  if (!gameOver && !gameWon) {
    // Player movement
    if (keyIsDown(LEFT_ARROW)) player.x -= player.speed;
    if (keyIsDown(RIGHT_ARROW)) player.x += player.speed;
    if (keyIsDown(UP_ARROW)) player.y -= player.speed;
    if (keyIsDown(DOWN_ARROW)) player.y += player.speed;
    
    // Keep player in bounds
    player.x = constrain(player.x, 0, width);
    player.y = constrain(player.y, 0, height);
    
    // Move enemies
    for (let enemy of enemies) {
      enemy.x += enemy.speedX;
      enemy.y += enemy.speedY;
      
      // Bounce enemies off walls
      if (enemy.x < 0 || enemy.x > width) enemy.speedX *= -1;
      if (enemy.y < 0 || enemy.y > height) enemy.speedY *= -1;
      
      // Check collision with enemy
      if (dist(player.x, player.y, enemy.x, enemy.y) < (player.size + enemy.size)/2) {
        gameOver = true;
      }
    }
    
    // Check collectibles
    for (let collectible of collectibles) {
      if (!collectible.collected && dist(player.x, player.y, collectible.x, collectible.y) < (player.size + collectible.size)/2) {
        if (dist(player.x, player.y, width/2, height/2) < 50) {
          collectible.collected = true;
          score++;
        }
      }
    }
    
    if (score === 3) gameWon = true;
  }
  
  // Draw everything
  // Draw player
  fill(0, 255, 0);
  circle(player.x, player.y, player.size);
  
  // Draw collectibles
  fill(255, 255, 0);
  for (let collectible of collectibles) {
    if (!collectible.collected) {
      circle(collectible.x, collectible.y, collectible.size);
    }
  }
  
  // Draw enemies
  fill(255, 0, 0);
  for (let enemy of enemies) {
    circle(enemy.x, enemy.y, enemy.size);
  }
  
  // Draw center target
  noFill();
  stroke(0);
  circle(width/2, height/2, 100);
  
  // Game over/win messages
  if (gameOver) {
    textAlign(CENTER);
    textSize(32);
    fill(255, 0, 0);
    text('Game Over!', width/2, height/2);
  }
  
  if (gameWon) {
    textAlign(CENTER);
    textSize(32);
    fill(0, 255, 0);
    text('You Win!', width/2, height/2);
  }
  
  // Show score
  textAlign(LEFT);
  textSize(20);
  fill(0);
  text('Score: ' + score, 10, 30);
}
